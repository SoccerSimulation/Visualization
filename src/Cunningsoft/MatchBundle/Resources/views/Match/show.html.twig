{% extends 'MatchBundle::layout.html.twig' %}

{% block content %}
<div class="row">
    <div class="col-md-12">
        <div id="pitch"></div>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <div class="js-fps"></div>
        <div id="slider"></div>
        <table class="table center">
            <thead>
                <tr>
                    <th class="center">Red</th>
                    <th></th>
                    <th class="center">Blue</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="js-score-red"></td>
                    <td>Score</td>
                    <td class="js-score-blue"></td>
                </tr>
                <tr>
                    <td class="js-controlling-player-red"></td>
                    <td>Controlling Player</td>
                    <td class="js-controlling-player-blue"></td>
                </tr>
                <tr>
                    <td class="js-team-state-red"></td>
                    <td>State</td>
                    <td class="js-team-state-blue"></td>
                </tr>
                <tr>
                    <td class="js-in-control-red"></td>
                    <td></td>
                    <td class="js-in-control-blue"></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="col-md-6">
        <div class="input-group">
            <span class="input-group-addon"><input type="checkbox" id="showPlayerState" checked="checked" /></span>
            <label class="form-control" for="showPlayerState">show player state</label>
        </div>
        <div class="input-group">
            <span class="input-group-addon"><input type="checkbox" id="showSteeringForce" /></span>
            <label class="form-control" for="showSteeringForce">show steering force</label>
        </div>
        <div class="input-group">
            <span class="input-group-addon"><input type="checkbox" id="showTarget" /></span>
            <label class="form-control" for="showTarget">show target</label>
        </div>
        <div class="input-group">
            <span class="input-group-addon"><input type="checkbox" id="showIfThreatened" /></span>
            <label class="form-control" for="showIfThreatened">show if threatened</label>
        </div>
        <div class="input-group">
            <span class="input-group-addon"><input type="checkbox" id="showRegions" /></span>
            <label class="form-control" for="showRegions">show regions</label>
        </div>
        <div class="input-group">
            <span class="input-group-addon"><input type="checkbox" id="showSupportSpots" /></span>
            <label class="form-control" for="showSupportSpots">show support spots</label>
        </div>
    </div>
</div>

<script>
    var response, pitch, conn;
    $(document).ready(function() {
        response = {};
        pitch = Raphael(document.getElementById('pitch'), pitchWidth + 2 * pitchOffsetWidth, pitchHeight + 2 * pitchOffsetHeight);
        conn = new ab.Session(
                'ws://localhost:8080',
                function () {
                    conn.subscribe('livematch', function (topic, data) {
                        response = data;
                    });
                    $('#slider').noUiSlider({
                        start: {{ fps }},
                        snap: true,
                        range: {
                            'min': 0.2,
                            '10%': 0.5,
                            '20%': 1,
                            '30%': 2,
                            '40%': 5,
                            '50%': 10,
                            '60%': 15,
                            '70%': 20,
                            '80%': 25,
                            '90%': 30,
                            'max': 40
                        }
                    });
                    $('#slider').on('change', function () {
                        console.log($(this).val());
                        conn.publish('adjustSpeed', $(this).val());
                    });
                },
                function () {
                    console.warn('WebSocket connection closed');
                },
                {
                    'skipSubprotocolCheck': true
                }
        );
        setInterval(function() {
            render(response);
        }, 1000 / 30);
    });
</script>
{% endblock %}
